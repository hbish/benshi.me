---
import Container from '../layouts/Container.astro';
import WebmentionCount from '../components/WebmentionCount.astro';
import WebmentionFeed from '../components/WebmentionFeed.astro';
import { type CollectionEntry, getCollection } from 'astro:content';
import { SITE_TITLE } from '../consts';

export async function getStaticPaths() {
    const posts = await getCollection('posts');
    const notes = await getCollection('notes');

    const postPaths = posts.map((post) => ({
        params: { slug: post.slug },
        props: { content: post, type: 'post' }
    }));

    const notePaths = notes.map((note) => ({
        params: { slug: `notes/${note.slug}` },
        props: { content: note, type: 'note' }
    }));

    return [...postPaths, ...notePaths];
}

type Props = {
    content: CollectionEntry<'posts'> | CollectionEntry<'notes'>;
    type: 'post' | 'note';
};

const { content, type } = Astro.props;
const { Content, remarkPluginFrontmatter } = await content.render();

// Format date for display
const formatDate = (date: Date) => {
    return date.toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    });
};

// Format date for machine reading (ISO format)
const formatISODate = (date: Date) => {
    return date.toISOString();
};

// Current page URL for schema markup
const currentUrl = new URL(Astro.url.pathname, Astro.site);
---

<Container title={content.data.title}>
    <div class="content px-4 sm:px-0">
        <div class="section-title uppercase tracking-wide text-theme-muted mb-2 text-center">
            {type === 'post' ? 'Blog Post' : 'Note'}
        </div>

        <article class="h-entry prose prose-lg dark:prose-invert max-w-none">
            <!-- Article Header -->
            <header class="mb-8 border-b border-theme pb-6">
                <h1 class="p-name text-3xl lg:text-4xl font-bold leading-tight mb-4 text-theme text-center">
                    {content.data.title}
                </h1>

                <!-- Article Metadata -->
                <div class="flex flex-wrap items-center justify-center text-sm text-theme-muted space-x-4 mb-4">
                    <div class="flex items-center">
                        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path>
                        </svg>
                        <time class="dt-published" datetime={formatISODate(content.data.date)}>
                            {formatDate(content.data.date)}
                        </time>
                    </div>

                    {remarkPluginFrontmatter?.minutesRead && (
                        <div class="flex items-center">
                            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"></path>
                            </svg>
                            <span>{remarkPluginFrontmatter.minutesRead} read</span>
                        </div>
                    )}

                    {type === 'post' && (
                        <WebmentionCount target={currentUrl.toString()} />
                    )}
                </div>

                    {content.data.tags && content.data.tags.length > 0 && (
                        <div class="flex items-center flex-wrap gap-2 justify-center">
                            <svg class="w-4 h-4 text-theme-muted" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100 2 1 1 0 000-2z" clip-rule="evenodd"></path>
                            </svg>
                            {content.data.tags.map((tag: string) => (
                                <a 
                                    href={`/tags/${tag}`}
                                    class="inline-block px-2 py-1 text-xs font-medium bg-theme-secondary text-theme-accent border border-theme rounded-full hover:bg-theme-accent hover:text-white transition-all duration-200 hover:scale-105"
                                >
                                    {tag}
                                </a>
                            ))}
                        </div>
                    )}

                {content.data.description && (
                    <p class="text-lg text-theme-secondary mt-4 leading-relaxed">
                        {content.data.description}
                    </p>
                )}
            </header>

            <!-- Article Content -->
            <div class="e-content prose prose-lg dark:prose-invert max-w-none">
                <Content />
            </div>
        </article>

        {type === 'post' && (
            <div class="webmentions mt-12 pt-8 border-t border-theme">
                <h3 class="text-xl font-semibold mb-6 text-theme">Social Interactions</h3>
                <WebmentionFeed target={currentUrl.toString()} />
                
                <div class="socialize mt-8 pt-6 border-t border-theme-accent">
                    <p class="text-theme-muted text-sm mb-4">
                        Like this post? Share it on social media or mention it in your own blog to join the conversation!
                    </p>
                    <div class="flex gap-4">
                        <a 
                            href={`https://twitter.com/intent/tweet?url=${encodeURIComponent(currentUrl.toString())}&text=${encodeURIComponent(content.data.title)}`}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="inline-flex items-center px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-colors"
                        >
                            <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                            </svg>
                            Tweet this
                        </a>
                    </div>
                </div>
            </div>
        )}
    </div>

    <!-- JSON-LD Schema Markup -->
    <script type="application/ld+json" set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": type === 'post' ? "BlogPosting" : "Article",
        "headline": content.data.title,
        "description": content.data.description || content.data.title,
        "author": {
            "@type": "Person",
            "name": content.data.author
        },
        "datePublished": formatISODate(content.data.date),
        "dateModified": formatISODate(content.data.date),
        "url": currentUrl.toString(),
        "mainEntityOfPage": {
            "@type": "WebPage",
            "@id": currentUrl.toString()
        },
        "publisher": {
            "@type": "Organization",
            "name": SITE_TITLE,
            "url": Astro.site?.toString()
        },
        ...(remarkPluginFrontmatter?.minutesRead && {
            "timeRequired": `PT${remarkPluginFrontmatter.minutesRead.replace(/\D/g, '')}M`
        }),
        ...(content.data.tags && {
            "keywords": content.data.tags.join(', ')
        })
    })}>
    </script>
</Container>
