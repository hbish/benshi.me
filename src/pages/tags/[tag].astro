---
import Container from '../../layouts/Container.astro'
import { type CollectionEntry, getCollection } from 'astro:content'

export async function getStaticPaths() {
  const posts = await getCollection('posts')
  const notes = await getCollection('notes')
  const allContent = [...posts, ...notes]

  // Get all unique tags
  const tags = new Set<string>()
  allContent.forEach(content => {
    if (content.data.tags) {
      content.data.tags.forEach((tag: string) => tags.add(tag))
    }
  })

  // Create paths for each tag
  return Array.from(tags).map(tag => ({
    params: { tag },
    props: {
      tag,
      posts: allContent
        .filter(content => content.data.tags?.includes(tag))
        .sort((a, b) => b.data.date.getTime() - a.data.date.getTime()),
    },
  }))
}

type Props = {
  tag: string
  posts: (CollectionEntry<'posts'> | CollectionEntry<'notes'>)[]
}

const { tag, posts } = Astro.props
---

<Container title={`Tag: ${tag} - Ben Shi`}>
  <div class="section-title text-center text-2xl my-2 px-4 sm:px-0">Posts tagged with "{tag}"</div>
  <div class="text-center mb-4 px-4 sm:px-0">
    <p class="text-gray-600">{posts.length} {posts.length === 1 ? 'post' : 'posts'} found</p>
  </div>
  <section class="text-center px-4 sm:px-0">
    {
      posts.map(post => {
        const isNote = post.collection === 'notes'
        const url = isNote ? `/notes/${post.slug}` : `/${post.slug}`

        return (
          <div>
            <div class={'row my-2'}>
              <div class={'column'}>
                <a href={url}>{post.data.title}</a>
                ::{' '}
                <strong>
                  {post.data.date.toLocaleDateString(undefined, {
                    month: 'long',
                    day: 'numeric',
                    year: 'numeric',
                  })}
                </strong>
                {isNote && <span class="text-gray-500 ml-2">(note)</span>}
              </div>
              <div>
                {post.data.minutesRead && (
                  <span class={'time-to-read'}>~{post.data.minutesRead} min read</span>
                )}
              </div>
            </div>
            {post.data.description && (
              <div class="post-excerpt text-left my-3 px-4">{post.data.description}</div>
            )}
          </div>
        )
      })
    }
    {
      posts.length === 0 && (
        <div class="text-gray-500 text-center my-8">No posts found with this tag.</div>
      )
    }
  </section>

  <div class="text-center mt-8 pt-6 border-t border-theme px-4 sm:px-0">
    <a href="/archive" class="text-theme-accent hover:underline"> ‚Üê Back to archive </a>
  </div>
</Container>
